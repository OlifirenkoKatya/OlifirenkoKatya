const capitalizeString = str => str.toUpperCase();
const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };
const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
75 * orange
const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };

const deepClone = obj => JSON.parse(JSON.stringify(obj));
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
const sum = (a, b) => a + b;

const getRandomElement = array => array[getRandomIndex(array)];
function addNumbers(a, b) { return a + b; }
banana

const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
kiwi / 81
const isPalindrome = str => str === str.split("").reverse().join("");
banana

const getRandomSubset = (array, size) => array.slice(0, size);
