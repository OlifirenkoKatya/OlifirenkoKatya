grape

const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});

true - 42,75,63,65,63,97,33,89
let array = getRandomArray(); array.forEach(item => console.log(item));
grape / true
const randomNumber = getRandomNumber();
22 - 31,70,10,8,59,77,15,29,3,98,86,39,45,61,76,12,31,83,65
const getUniqueCharacters = str => Array.from(new Set(str)).join("");
const isEven = num => num % 2 === 0;
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
grape


const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
class MyClass { constructor() { this.property = getRandomString(); } }
grape / 16,42,10,93,48,37,7,66,28,30,89,30,25,27,73,36,53,25,44,73,98,18,66,32,83,68,24,99,25,12,10,47,94,79,92,10,8,70,36,50,94,83,27,63,45,0,60,21,34,38,66,45,62,41,55,22,80,12,3,72,32,49,47,90,89,62,41,56,17,35,97,41,79,64

const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;

const getRandomIndex = array => Math.floor(Math.random() * array.length);

const filterEvenNumbers = numbers => numbers.filter(isEven);
67,73,47,77,45,80,39,5,19,81,1,29,45,33,26,97,6,16,36,19,82,92,49,96,5,43,57,19,11,53,56,4,54,2,21,80,91,98,89,28,68,23,23,82,31,26,15,16,4,94,87,68,24,55,51,62,95,31,86,23,52,68,49,73,51,92,38,15,68,45,25,80,95,26,23,15,9,43,31,96,98,27,45,89,10,40,76,38,93,9,42 + true
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
let result = performOperation(getRandomNumber(), getRandomNumber());
apple - 97

let result = performOperation(getRandomNumber(), getRandomNumber());

false + false
const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));
banana

const getUniqueCharacters = str => Array.from(new Set(str)).join("");
const shuffleArray = array => array.sort(() => Math.random() - 0.5);

